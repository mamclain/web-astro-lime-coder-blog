---
// src/pages/[...slug].astro
import { getCollection, type CollectionEntry } from "astro:content";
import Base from "../layouts/base/base.astro";
import { segmentsFromSlug, permalinkFromSlug } from "../lib/permalinks";

export async function getStaticPaths() {
    const posts = await getCollection("blog");
    posts.sort((a, b) => +b.data.date - +a.data.date);

    return posts.map((post) => ({
        // catch-all expects a string path here (not array)
        params: { slug: segmentsFromSlug(post.slug).join("/") },
        props: { post },
    }));
}

const { post } = Astro.props as { post: CollectionEntry<"blog"> };
const canonical = permalinkFromSlug(post.slug);

const { Content /*, headings */ } = await post.render();
---

<Base title={post.data.title} url={`https://limecoder.com${canonical}`} description={post.data.excerpt}>
    {/* This wrapper becomes the ONLY scroller in the main column */}
    <div class="flex-1 min-h-0 overflow-y-auto px-4 sm:px-8 py-6">
        {/* Choose a readable max width; adjust if you want wider */}
        <article class="mx-auto max-w-screen-lg">
            <h1 class="font-display text-3xl sm:text-4xl text-white leading-tight">
                {post.data.title}
            </h1>

            <div class="mt-3 flex flex-wrap items-center gap-2 text-sm text-[var(--color-ink-muted)]">
        <span>
          {(post.data.date instanceof Date ? post.data.date : new Date(post.data.date))
              .toLocaleDateString()}
        </span>
                {post.data.tags?.length && <span aria-hidden="true">â€¢</span>}
                {post.data.tags?.map((t) => (
                        <span class="rounded-lg bg-[#26361e] text-[#bdeb7f] px-2 py-0.5">{t}</span>
                ))}
            </div>

            {post.data.image && (
                    <img
                            src={post.data.image}
                            alt=""
                            class="mt-6 w-full rounded-xl border border-white/10 object-cover"
                    />
            )}

            {/* Render compiled markdown */}
            <div class="prose prose-invert max-w-none mt-8">
                <Content />
            </div>
        </article>

        {/* Keep a little spacer so last paragraph isn't flush with viewport bottom */}
        <div class="h-16"></div>
    </div>
</Base>